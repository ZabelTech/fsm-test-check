; CIDER 0.8.2 (Java nil, Clojure nil, nREPL 0.2.3)
CompilerException java.lang.RuntimeException: Unable to resolve symbol: commands in this context, compiling:(/Users/guilespi/Documents/Development/interrupted/fsm-test-check/src/fsm_test_check/core.clj:19:38)
CompilerException java.lang.RuntimeException: Unable to resolve symbol: command-seq in this context, compiling:(/Users/guilespi/Documents/Development/interrupted/fsm-test-check/src/fsm_test_check/core.clj:52:18)
CompilerException java.lang.RuntimeException: Unable to resolve symbol: command-seq-helper in this context, compiling:(/Users/guilespi/Documents/Development/interrupted/fsm-test-check/src/fsm_test_check/core.clj:59:25)
user> 
fsm-test-check.core> (gen/bind (gen/choose 0 10)
          (fn [num-elements]
            (command-seq {:people []} 
                         {:add-cmd add-cmd
                          :delete-cmd delete-cmd}  
                         num-elements)))
CompilerException java.lang.RuntimeException: Unable to resolve symbol: command-seq in this context, compiling:(/private/var/folders/22/pc7s79j504s4h3cz1m19ddh40000gn/T/form-init2213884494484506468.clj:3:13) 
fsm-test-check.core> (gen/bind (gen/choose 0 10)
          (fn [num-elements]
            (cmd-seq {:people []} 
                         {:add-cmd add-cmd
                          :delete-cmd delete-cmd}  
                         num-elements)))
#clojure.test.check.generators.Generator{:gen #<generators$gen_bind$fn__3481 clojure.test.check.generators$gen_bind$fn__3481@9d55931>}
fsm-test-check.core> (gen/sample (gen/bind (gen/choose 0 10)
                                           (fn [num-elements]
                                             (cmd-seq 
                                                      num-elements))))
ArityException Wrong number of args (3) passed to: core/cmd-seq  clojure.lang.AFn.throwArity (AFn.java:429)
fsm-test-check.core> (gen/sample (cmd-seq {:people []} 
                                          {:add-cmd add-cmd
                                           :delete-cmd delete-cmd}  ))
IllegalArgumentException Don't know how to create ISeq from: fsm_test_check.core$reify__4163  clojure.lang.RT.seqFrom (RT.java:505)
fsm-test-check.core> (gen/sample (cmd-seq {:people []} 
                                          {:add-cmd add-cmd
                                           :delete-cmd delete-cmd}))